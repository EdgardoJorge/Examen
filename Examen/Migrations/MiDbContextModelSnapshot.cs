// <auto-generated />
using System;
using ExamenData.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.Migrations
{
    [DbContext(typeof(MiDbContext))]
    partial class MiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamenData.DataBase.Tables.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ApellidoMaterno = "Rosas",
                            ApellidoPaterno = "Rosas",
                            DNI = "17273363",
                            EMail = "ideideijde@deidhe.com",
                            Nombre = "Leonardo"
                        },
                        new
                        {
                            id = 2,
                            ApellidoMaterno = "Rosas",
                            ApellidoPaterno = "Pablo",
                            DNI = "12134564",
                            EMail = "dheui@hduehde.com",
                            Nombre = "Juan"
                        });
                });

            modelBuilder.Entity("ExamenData.DataBase.Tables.DetallePedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_pedido")
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_pedido");

                    b.HasIndex("id_producto");

                    b.ToTable("DetallePedidos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            cantidad = 12,
                            id_pedido = 1,
                            id_producto = 2
                        },
                        new
                        {
                            id = 2,
                            cantidad = 3,
                            id_pedido = 2,
                            id_producto = 1
                        });
                });

            modelBuilder.Entity("ExamenData.DataBase.Tables.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("fechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<float>("total")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("id_cliente");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            fechaPedido = new DateTime(2024, 9, 15, 9, 13, 55, 970, DateTimeKind.Local).AddTicks(5642),
                            id_cliente = 1,
                            total = 13f
                        },
                        new
                        {
                            Id = 2,
                            fechaPedido = new DateTime(2024, 9, 15, 9, 13, 55, 970, DateTimeKind.Local).AddTicks(5670),
                            id_cliente = 2,
                            total = 12f
                        });
                });

            modelBuilder.Entity("ExamenData.DataBase.Tables.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Nombre = "Pan integral",
                            precio = 12.300000000000001,
                            stock = 12
                        },
                        new
                        {
                            id = 2,
                            Nombre = "Pan Frances",
                            precio = 10.0,
                            stock = 20
                        });
                });

            modelBuilder.Entity("ExamenData.DataBase.Tables.DetallePedido", b =>
                {
                    b.HasOne("ExamenData.DataBase.Tables.Pedido", null)
                        .WithMany()
                        .HasForeignKey("id_pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamenData.DataBase.Tables.Producto", null)
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExamenData.DataBase.Tables.Pedido", b =>
                {
                    b.HasOne("ExamenData.DataBase.Tables.Cliente", null)
                        .WithMany()
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
